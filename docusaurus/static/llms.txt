# Strapi Documentation

- [Account billing details](https://docs.strapi.io/cloud/account/account-billing): Manage billing details for Strapi Cloud account.
- [Profile settings](https://docs.strapi.io/cloud/account/account-settings): Manage Strapi Cloud account settings.
- [Database](https://docs.strapi.io/cloud/advanced/database): Configure your own database on Strapi Cloud.
- [Email Provider](https://docs.strapi.io/cloud/advanced/email): Configure Strapi Cloud to use a third-party email provider.
- [Upload Provider](https://docs.strapi.io/cloud/advanced/upload): Configure Strapi Cloud to use a third-party upload provider.
- [Command Line Interface (CLI) <NewBadge />](https://docs.strapi.io/cloud/cli/cloud-cli): Strapi Cloud comes with a Command Line Interface (CLI) which allows you to log in and out, and to deploy a local project without it having to be hoste...
- [Caching & Performance](https://docs.strapi.io/cloud/getting-started/caching): For Strapi Cloud applications with large amounts of cacheable content, such as images, videos, and other static assets, enabling CDN (Content Delivery...
- [Strapi Cloud fundamentals <UpdatedBadge />](https://docs.strapi.io/cloud/getting-started/cloud-fundamentals): Before going any further into this Strapi Cloud documentation, we recommend you to acknowledge the main concepts below. They will help you to understa...
- [with Cloud dashboard](https://docs.strapi.io/cloud/getting-started/deployment): Learn how to deploy your Strapi application on Strapi Cloud.
- [with Cloud CLI](https://docs.strapi.io/cloud/getting-started/deployment-cli): Learn how to deploy your Strapi application via the CLI.
- [Project deployment](https://docs.strapi.io/cloud/getting-started/deployment-options): Learn how to deploy your Strapi application on Strapi Cloud, via the Cloud dashboard or the CLI.
- [Welcome to the Strapi Cloud Documentation!](https://docs.strapi.io/cloud/getting-started/intro): The Strapi Cloud documentation contains all technical documentation related to the setup, deployment, update and customization of your Strapi Cloud account and applications.
- [Information on billing & usage](https://docs.strapi.io/cloud/getting-started/usage-billing): This page contains general information related to the usage and billing of your Strapi Cloud account and projects.
- [Collaboration](https://docs.strapi.io/cloud/projects/collaboration): Share your projects on Strapi Cloud to collaborate with others.
- [Deployments management](https://docs.strapi.io/cloud/projects/deploys): Manage your projects's deployments.
- [Deployment history & logs](https://docs.strapi.io/cloud/projects/deploys-history): View projects' deployment history and logs.
- [Notifications](https://docs.strapi.io/cloud/projects/notifications): View your notifications on Strapi Cloud.
- [Projects overview](https://docs.strapi.io/cloud/projects/overview): View and manage your projects on Strapi Cloud.
- [Runtime logs](https://docs.strapi.io/cloud/projects/runtime-logs): View runtime logs of Strapi Cloud project.
- [Project settings](https://docs.strapi.io/cloud/projects/settings): View and manage your projects settings on Strapi Cloud.
- [관리자 패널 커스터마이징](https://docs.strapi.io/cms/admin-panel-customization): Strapi의 관리자 패널은 필요에 따라 커스터마이징할 수 있어, 브랜드 아이덴티티를 반영할 수 있습니다.
- [관리자 패널 번들러](https://docs.strapi.io/cms/admin-panel-customization/bundlers): Strapi 5에서 Vite와 webpack 번들러 설정 방법을 알아보세요.
- [관리자 패널 확장](https://docs.strapi.io/cms/admin-panel-customization/extension): Strapi 관리자 패널을 확장하는 방법을 알아보세요.
- [파비콘](https://docs.strapi.io/cms/admin-panel-customization/favicon): Strapi 관리자 패널에 표시되는 파비콘을 교체하는 방법을 안내합니다.
- [홈페이지 커스터마이징](https://docs.strapi.io/cms/admin-panel-customization/homepage): Strapi 관리자 패널의 홈페이지와 위젯 커스터마이징 방법을 알아보세요.
- [로케일 & 번역](https://docs.strapi.io/cms/admin-panel-customization/locales-translations): Strapi 관리자 패널에서 로케일을 추가하고 번역을 확장하는 방법을 알아보세요.
- [로고](https://docs.strapi.io/cms/admin-panel-customization/logos): Strapi 관리자 패널에 표시되는 로고를 커스터마이징하는 방법을 알아보세요.
- [테마 확장](https://docs.strapi.io/cms/admin-panel-customization/theme-extension): Strapi 관리자 패널의 테마를 확장하는 방법을 알아보세요.
- [리치 텍스트 에디터 커스터마이징](https://docs.strapi.io/cms/admin-panel-customization/wysiwyg-editor): Strapi 관리자 패널의 WYSIWYG(리치 텍스트) 에디터를 커스터마이징하는 다양한 전략을 알아보세요.
- [Strapi Client](https://docs.strapi.io/cms/api/client): The Strapi Client library simplifies interactions with your Strapi back end, providing a way to fetch, create, update, and delete content.
- [Content API](https://docs.strapi.io/cms/api/content-api): Learn more about Strapi 5's Content API
- [Documents](https://docs.strapi.io/cms/api/document): Learn what a Document is in Strapi v5
- [Document Service API](https://docs.strapi.io/cms/api/document-service): The Document Service API is the recommended way to interact with your content from the back-end server or from plugins.
- [Using fields with the Document Service API](https://docs.strapi.io/cms/api/document-service/fields): Use Strapi's Document Service API to select the fields to return with your queries.
- [Using filters with the Document Service API](https://docs.strapi.io/cms/api/document-service/filters): This document provides information about the filters available in the Document Service API.
- [Using the locale parameter with the Document Service API](https://docs.strapi.io/cms/api/document-service/locale): Use Strapi's Document Service API to work with locale versions with your queries.
- [Extending the Document Service behavior](https://docs.strapi.io/cms/api/document-service/middlewares): This document provides information about the middlewares in the Document Service API.
- [Using Populate with the Document Service API](https://docs.strapi.io/cms/api/document-service/populate): Use Strapi's Document Service API to populate or select some fields.
- [Using Sort & Pagination with the Document Service API](https://docs.strapi.io/cms/api/document-service/sort-pagination): Use Strapi's Document Service API to sort and paginate query results
- [Using Draft & Publish with the Document Service API](https://docs.strapi.io/cms/api/document-service/status): Use Strapi's Document Service API to return either the draft or the published version of a document
- [GraphQL API](https://docs.strapi.io/cms/api/graphql): import DeepFilteringBlogLink from '/docs/snippets/deep-filtering-blog.md'
- [REST API reference](https://docs.strapi.io/cms/api/rest): Interact with your Content-Types using the REST API endpoints Strapi generates for you.
- [Filters](https://docs.strapi.io/cms/api/rest/filters): Use Strapi's REST API to filter the results of your requests.
- [REST API Guides](https://docs.strapi.io/cms/api/rest/guides/intro): Deep dive into some specific REST API topics using guides that extensively explain some use cases or give step-by-step instructions.
- [Interactive Query Builder](https://docs.strapi.io/cms/api/rest/interactive-query-builder): Use an interactive tool that leverages the querystring library to build your query URL
- [Locale](https://docs.strapi.io/cms/api/rest/locale): Browse the REST API reference for the locale parameter to take advantage of the Internationalization feature through REST.
- [Parameters](https://docs.strapi.io/cms/api/rest/parameters): Use API parameters to refine your Strapi REST API queries.
- [Populate and Select](https://docs.strapi.io/cms/api/rest/populate-select): Use Strapi's REST API to populate or select certain fields.
- [Relations](https://docs.strapi.io/cms/api/rest/relations): Use the REST API to manage the order of relations
- [Sort and Pagination](https://docs.strapi.io/cms/api/rest/sort-pagination): Use Strapi's REST API to sort or paginate your data.
- [Status](https://docs.strapi.io/cms/api/rest/status): Use Strapi's REST API to work with draft or published versions of your documents.
- [Upload files](https://docs.strapi.io/cms/api/rest/upload): Learn how to use the /api/upload endpoints to upload files to Strapi with the REST API.
- [백엔드 커스터마이징](https://docs.strapi.io/cms/backend-customization): Strapi 백엔드의 모든 요소(라우트, 정책, 미들웨어, 컨트롤러, 서비스, 모델, 요청, 응답, 웹훅 등)는 커스터마이징이 가능합니다.
- [Controllers](https://docs.strapi.io/cms/backend-customization/controllers): Controllers are JavaScript files that contain a set of methods, called actions, reached by the client according to the requested [route](/cms/backend-...
- [Middlewares](https://docs.strapi.io/cms/backend-customization/middlewares): import MiddlewareTypes from '/docs/snippets/middleware-types.md'
- [Models](https://docs.strapi.io/cms/backend-customization/models): Strapi models (i.e. content-types, components, and dynamic zones) define a representation of the content structure.
- [Policies](https://docs.strapi.io/cms/backend-customization/policies): Strapi policies are functions that execute specific logic on each request before it reaches the controller. Policies can be customized according to your needs.
- [Requests and Responses](https://docs.strapi.io/cms/backend-customization/requests-responses): Learn more about requests and responses for Strapi, the most popular headless CMS.
- [Routes](https://docs.strapi.io/cms/backend-customization/routes): Strapi routes handle requests to your content and are auto-generated for your content-types. Routes can be customized according to your needs.
- [Services](https://docs.strapi.io/cms/backend-customization/services): Strapi services are a set of reusable functions, useful to simplify controllers logic.
- [Webhooks](https://docs.strapi.io/cms/backend-customization/webhooks): Strapi webhooks are user-defined HTTP callbacks used by an application to notify other applications that an event occurred.
- [커맨드 라인 인터페이스](https://docs.strapi.io/cms/cli): Strapi는 몇 초 만에 프로젝트를 스캐폴드하고 관리할 수 있는 모든 기능을 갖춘 커맨드 라인 인터페이스(CLI)를 제공합니다.
- [Configurations](https://docs.strapi.io/cms/configurations): Learn how you can manage and customize the configuration of your Strapi application.
- [API calls configuration](https://docs.strapi.io/cms/configurations/api): Strapi's default API parameters can be configured.
- [CRON jobs](https://docs.strapi.io/cms/configurations/cron): Strapi allows you to configure cron jobs for execution at specific dates and times, with optional reoccurrence rules.
- [Database configuration](https://docs.strapi.io/cms/configurations/database): Strapi offers a single entry point file to configure its databases.
- [Environment variables configuration](https://docs.strapi.io/cms/configurations/environment): Strapi provides specific environment variable names. Defining them in an environment file (e.g., `.env`) will make these variables and their values av...
- [Features configuration](https://docs.strapi.io/cms/configurations/features): Enable experimental Strapi features
- [Lifecycle functions](https://docs.strapi.io/cms/configurations/functions): Strapi includes lifecycle functions (e.g. register, bootstrap and destroy) that control the flow of your application.
- [Middlewares configuration](https://docs.strapi.io/cms/configurations/middlewares): Strapi offers a single entry point file for its middlewares configurations.
- [Plugins configuration](https://docs.strapi.io/cms/configurations/plugins): Strapi plugins have a single entry point file to define their configurations.
- [Server configuration](https://docs.strapi.io/cms/configurations/server): Strapi offers a single entry point file for its server configuration.
- [TypeScript configuration](https://docs.strapi.io/cms/configurations/typescript): How to configure Strapi for TypeScript development.
- [커스터마이징](https://docs.strapi.io/cms/customization): Strapi 5의 다양한 커스터마이징 가능성을 알아보세요
- [Database migrations](https://docs.strapi.io/cms/database-migrations): Strapi database migrations are ways to modify the database
- [Database transactions](https://docs.strapi.io/cms/database-transactions): Conceptual guide to transactions in Strapi
- [배포](https://docs.strapi.io/cms/deployment): Strapi를 사용하여 로컬에서 개발하고 다양한 호스팅 옵션으로 Strapi를 배포하는 방법을 알아보세요.
- [에러 처리](https://docs.strapi.io/cms/error-handling): Strapi의 에러 처리 기능을 통해 애플리케이션에서 에러를 쉽게 송수신할 수 있습니다.
- [관리자 패널](https://docs.strapi.io/cms/features/admin-panel): 관리자 패널 사용법을 알아보세요.
- [API 토큰](https://docs.strapi.io/cms/features/api-tokens): API 토큰을 사용하여 엔드유저 인증을 관리하는 방법을 알아보세요.
- [감사 로그](https://docs.strapi.io/cms/features/audit-logs): Strapi 5의 감사 로그(Audit Logs) 기능을 사용하는 방법을 알아보세요.
- [콘텐츠 이력](https://docs.strapi.io/cms/features/content-history): Strapi 5의 콘텐츠 이력(Content History) 기능을 사용하여 콘텐츠 매니저에서 문서의 이전 버전을 탐색하고 복원하는 방법을 알아보세요.
- [콘텐츠 매니저](https://docs.strapi.io/cms/features/content-manager): 콘텐츠 매니저 사용법을 알아보세요.
- [Content-type Builder](https://docs.strapi.io/cms/features/content-type-builder): Learn to use the Content-type Builder.
- [Custom Fields](https://docs.strapi.io/cms/features/custom-fields): Learn how you can use custom fields to extend Strapi's content-types capabilities.
- [데이터 관리](https://docs.strapi.io/cms/features/data-management): 데이터 관리 기능을 사용해 서로 다른 Strapi 인스턴스 간 데이터 가져오기, 내보내기, 전송을 수행하는 방법을 알아보세요.
- [드래프트 & 발행](https://docs.strapi.io/cms/features/draft-and-publish): Strapi 5의 드래프트 & 발행 기능을 활용해 콘텐츠 초안을 관리하는 방법을 알아보세요.
- [이메일](https://docs.strapi.io/cms/features/email): 서버 또는 외부 제공업체를 통해 이메일을 발송하세요.
- [국제화(i18n)](https://docs.strapi.io/cms/features/internationalization): 콘텐츠 관리자가 콘텐츠를 번역할 수 있도록 해주는 국제화(i18n) 기능 사용법을 알아보세요.
- [미디어 라이브러리](https://docs.strapi.io/cms/features/media-library): 애플리케이션에 업로드된 모든 에셋을 표시하고 관리할 수 있는 미디어 라이브러리 사용법을 알아보세요.
- [미리보기](https://docs.strapi.io/cms/features/preview): 미리보기 기능을 통해 Content Manager에서 프론트엔드 결과를 바로 확인할 수 있습니다.
- [Role-Based Access Control (RBAC)](https://docs.strapi.io/cms/features/rbac): Learn to use the RBAC feature which allows to manage the users of the admin panel.
- [Releases](https://docs.strapi.io/cms/features/releases): Learn how to use the Releases feature that enables content managers to organize entries to publish/unpublish simultaneously
- [리뷰 워크플로우](https://docs.strapi.io/cms/features/review-workflows): 다양한 콘텐츠 타입에 대한 워크플로우를 생성 및 관리할 수 있는 리뷰 워크플로우(Review Workflows) 기능 사용법을 알아보세요.
- [싱글 사인온(SSO)](https://docs.strapi.io/cms/features/sso): SSO(싱글 사인온) 기능을 사용하여 외부 인증 제공업체를 통한 인증을 관리하는 방법을 알아보세요.
- [사용자 및 권한(Users & Permissions)](https://docs.strapi.io/cms/features/users-permissions): 엔드유저 관리를 위한 Users & Permissions 및 API 토큰 기능 사용법을 알아보세요.
- [설치](https://docs.strapi.io/cms/installation): Strapi를 설치하고 사용을 시작하는 다양한 옵션을 알아보세요.
- [Additional resources for migrating to Strapi 5](https://docs.strapi.io/cms/migration/v4-to-v5/additional-resources/introduction): The following pages cover some dedicated topics for specific use cases when upgrading to Strapi 5. Please ensure you have read the [introduction to up...
- [Breaking changes](https://docs.strapi.io/cms/migration/v4-to-v5/breaking-changes): View the list of all breaking changes introduced between Strapi v4 and v5.
- [Strapi 5로 업그레이드 - 소개 및 FAQ](https://docs.strapi.io/cms/migration/v4-to-v5/introduction-and-faq): Strapi 5로 업그레이드하는 방법에 대해 자세히 알아보세요
- [Step-by-step guide to upgrade to Strapi 5](https://docs.strapi.io/cms/migration/v4-to-v5/step-by-step): Follow this step-by-step guide to upgrade from Strapi v4 to Strapi 5
- [Admin Panel API](https://docs.strapi.io/cms/plugins-development/admin-panel-api): A Strapi plugin can interact with both the [back end](/cms/plugins-development/server-api) and the front end of a Strapi application. The Admin Panel ...
- [Content Manager APIs](https://docs.strapi.io/cms/plugins-development/content-manager-apis): The Content Manager APIs reference lists the APIs available to plugins for adding actions and options to the Content Manager List view and Edit view.
- [플러그인 생성 및 설정](https://docs.strapi.io/cms/plugins-development/create-a-plugin): Plugin SDK를 사용하여 Strapi 플러그인을 빌드하고 게시하는 방법을 알아보세요
- [플러그인 개발](https://docs.strapi.io/cms/plugins-development/developing-plugins): Strapi 플러그인 개발에 대한 일반적인 소개
- [How to create components for Strapi plugins](https://docs.strapi.io/cms/plugins-development/guides/create-components-for-plugins): Learn how to create and configure components for your Strapi plugins
- [How to pass data from server to admin panel with a Strapi plugin](https://docs.strapi.io/cms/plugins-development/guides/pass-data-from-server-to-admin): Learn how to pass data from server to admin panel with a Strapi plugin
- [How to store and access data from a Strapi plugin](https://docs.strapi.io/cms/plugins-development/guides/store-and-access-data): Learn how to store and access data from a Strapi plugin
- [플러그인 SDK](https://docs.strapi.io/cms/plugins-development/plugin-sdk): Strapi의 플러그인 SDK 명령어에 대한 참조 문서
- [플러그인 구조](https://docs.strapi.io/cms/plugins-development/plugin-structure): Strapi 플러그인의 구조에 대해 자세히 알아보세요
- [플러그인 확장](https://docs.strapi.io/cms/plugins-development/plugins-extension): Strapi는 [마켓플레이스](/cms/plugins/installing-plugins-via-marketplace#installing-marketplace-plugins-and-providers)에서 설치하거나 npm 패키지로 설치할 수 있는 플러그인들을 제공합니다....
- [플러그인용 서버 API](https://docs.strapi.io/cms/plugins-development/server-api): Strapi의 플러그인용 서버 API를 통해 Strapi 플러그인이 애플리케이션의 백엔드 부분(즉, 서버)을 커스터마이징할 수 있습니다.
- [Documentation plugin](https://docs.strapi.io/cms/plugins/documentation): By using Swagger UI, the API documentation plugin takes out most of your pain to generate your documentation.
- [GraphQL plugin](https://docs.strapi.io/cms/plugins/graphql): Use a GraphQL endpoint in your Strapi project to fetch and mutate your content.
- [Installing Plugins via the Marketplace](https://docs.strapi.io/cms/plugins/installing-plugins-via-marketplace): Strapi comes with built-in plugins such as [Documentation](/cms/plugins/documentation), [GraphQL](/cms/plugins/graphql), and [Sentry](/cms/plugins/sen...
- [Sentry plugin](https://docs.strapi.io/cms/plugins/sentry): Track errors in your Strapi application.
- [프로젝트 구조](https://docs.strapi.io/cms/project-structure): 기본 Strapi 애플리케이션의 프로젝트 구조를 알아보세요.
- [빠른 시작 가이드 - Strapi 개발자 문서](https://docs.strapi.io/cms/quick-start): 오픈소스 헤드리스 CMS인 Strapi를 3분 이내에 설치하고 실행하는 방법을 안내합니다.
- [템플릿](https://docs.strapi.io/cms/templates): 특정 목적에 맞게 설계된 Strapi의 사전 제작 애플리케이션(템플릿)을 사용하거나 직접 만들어보세요.
- [테스트](https://docs.strapi.io/cms/testing): Strapi 애플리케이션을 테스트하는 방법을 알아보세요.
- [TypeScript](https://docs.strapi.io/cms/typescript): Strapi 애플리케이션에서 TypeScript 시작하기
- [TypeScript 개발](https://docs.strapi.io/cms/typescript/development): Strapi 5에서 TypeScript 사용에 대해 자세히 알아보세요
- [TypeScript 가이드](https://docs.strapi.io/cms/typescript/guides): Strapi 프로젝트를 개발하면서 TypeScript를 활용하는 방법을 알아보세요.
- [업그레이드 도구](https://docs.strapi.io/cms/upgrade-tool): Strapi 업그레이드 도구는 새로운 Strapi 버전으로 자동 업그레이드를 도와주는 CLI 명령어입니다.